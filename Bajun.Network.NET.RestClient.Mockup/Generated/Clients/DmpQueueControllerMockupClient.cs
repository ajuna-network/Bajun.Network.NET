//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bajun.Network.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Bajun.Network.NET.NetApiExt.Generated.Model.cumulus_pallet_dmp_queue;
   using Ajuna.NetApi.Model.Types.Base;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Bajun.Network.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class DmpQueueControllerMockupClient : MockupBaseClient, IDmpQueueControllerMockupClient
   {
      private HttpClient _httpClient;
      public DmpQueueControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetConfiguration(ConfigData value)
      {
         return await SendMockupRequestAsync(_httpClient, "DmpQueue/Configuration", value.Encode(), Bajun.Network.NET.NetApiExt.Generated.Storage.DmpQueueStorage.ConfigurationParams());
      }
      public async Task<bool> SetPageIndex(PageIndexData value)
      {
         return await SendMockupRequestAsync(_httpClient, "DmpQueue/PageIndex", value.Encode(), Bajun.Network.NET.NetApiExt.Generated.Storage.DmpQueueStorage.PageIndexParams());
      }
      public async Task<bool> SetPages(BaseVec<BaseTuple<U32, BaseVec<U8>>> value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "DmpQueue/Pages", value.Encode(), Bajun.Network.NET.NetApiExt.Generated.Storage.DmpQueueStorage.PagesParams(key));
      }
      public async Task<bool> SetOverweight(BaseTuple<U32, BaseVec<U8>> value, U64 key)
      {
         return await SendMockupRequestAsync(_httpClient, "DmpQueue/Overweight", value.Encode(), Bajun.Network.NET.NetApiExt.Generated.Storage.DmpQueueStorage.OverweightParams(key));
      }
   }
}
